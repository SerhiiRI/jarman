#+TITLE: Agenda
#+TODO: TODO(t) PROCESSING(p) | DONE(d)
#+TODO: TOREVIEW(r) | REVIEWED(d)
#+TAGS: @Julia(j) @Aleks(a) @Serhii(s)
#+PRIORITIES: 1 3 2
#+PROPERTY: session *EL* 
#+PROPERTY: cache yes
# #+ARCHIVE: ::* Archived
#+ARCHIVE: %s_done::
#+STARTUP: overview

* Frontend
** PROCESSING [#2] Jarman Theme Light Style, live coding :@Julia:@Aleks:@Serhii:
   - [X] global font
   - [X] global background
   - [X] global foreground
   - [ ] rewrite styles config
   - [ ] unifing styles in UI
   - [ ] removing unnessesary borders.
   - [X] removing unnessesary font override         
** PROCESSING [#1] Frontend refactorization
*** TODO Icons                                                       :@Julia:
    - [ ] Plus icon. Replace =plus= icon, make add width, and make only one color. And =minus= do little bit higher, also =x= icon
    - [ ] refresh-reload icons, increase arrow, and make some distance between each other. Only one color
    - [ ] Left/Right direction one arrow. like =->= and =<-=
    - [ ] =odt export= file icon
    - [ ] logout icon.
    - [ ] =Select all=, is like "checkbox" =[V]=
    - [ ] Pay icon. (hrywna) + (dolar)
    - [ ] До лупи додати кінець, одноколірна.
     
*** TODO Main view                                                   :@Aleks:
    - [X] On tabs replace non-active tab on more brighter color.
    - [X] ON tabs replace ~x~ icon on one color.
    - [-] change slider menu [3/4]
      - [X] to ~close-app~ also add ~logout~
      - [X] remove ~Change work mode~, and add optino to ~.jarman~ which will be add "key icon" to slider menu.
      - [ ] create slider menu ~.jarman~ configuraion.
      - [X] Remove ~Db visuliser~ from left bar.
    - [X] Font. Select automaticaly Font's for all GUI components, becuase all plugins also must inherit those.
    - [-] Menu bar [6/7]
      - [ ] increase slider menu size, and put this option to ~.jarman~ or ~.jarman.d/config~ directory, for you taste.
      - [X] Levels. Add spaces inside expand buttons groups.
      - [X] For levels in expand button please choose at least Six color levels, and repeat if user create level 7 or 8.
      - [X] For levels choose rainbow colors but make it little bit more pastel.
      - [X] Change all black font's on closelly to black. Use some *dark-gray*, with blue-direction - ~#030D1C~ as example.
      - [X] Also for expand buttons use bold ubuntu fonts (looks little crappy).
      - [X] Chnage ordering items in menubar. At first place user must saw all buisness tables, and next any other *setting* or *db visualizer* etc.

*** TODO Table.clj                                                   :@Aleks:
    - [X] remove 1pixel black border for right table.
    - [ ] text "hide" replace on julia (not created at that moment) left arrow, and background fill with one gray color, as "tab", or left section in table.clj, where components is.
    - [X] make icon smaller, on 10-20%
    - [X] Move Table title to left side (nope, on center looks better), and colorize in "ocean blue" color, julia use it in login panel.

*** TODO Service Periods plugins                                     :@Aleks:
    - [ ] Expand buttons [0/7]
      - [ ] Buttons must be resizable, and scaled to window width.
      - [ ] Not hide expanded button, when checkbox was clicked. Julia add coments inside plugin, about this issue (find "TODO" mark)
      - [ ] make less color differencess between embaded expand buttons.
      - [ ] Also in future change `+/-` icons.
      - [ ] For Enterperneur use this format style "X-kom, 400 zl", money color must be pastel green.
      - [ ] For Service Contract use this format stlye notation "30-12-2020 - 04-01-2021,  200 zl", money also in green.
      - [ ] For Service Months use ths format style notation "01-01-2020 - 04-01-2021,  100 zl", money also in pastel green.
    - [ ] Julia call it *insert-space*, is section where we adding new service contract. Rewrite whole panel, but keep logic as we create before.
    - [ ] After you click on one month, you can edit all service contract month payments. You can edit, only if month wasn't payed. Rewrite Julia view, on your implementation. I think better be when all those month fields be in one line.
** PROCESSING [#2] Database Visualizer                               :@Aleks:
   - [x] global font
   - [x] global background
   - [x] global foreground
   - [ ] rewrite styles config, 
   - [ ] unifing styles in UI
   - [ ] removing unnessesary borders. 
   - [x] removing unnessesary font override
   
** PROCESSING [#2] Confgen fix                                       :@Aleks:
   - [x] - If display do not exist then editable
   - [x] - fix alert window
   - [ ] - Changes in theme again can not saving to file
** TODO [#2] Check theme covering the GUI. Fix style  :@Julia:@Aleks:@Serhii:
     @Morfeu5z and @Julia47 , and I if you want, must create a group meeting
     on which we try to resolve problems:
      
   - [ ] find were style in system not getting from config. 
   - [ ] create low priority issue with icons which must be redraw
   - [ ] unification design in some places.      
      
** TODO [#3] Make diagram from DB Visualiser                         :@Julia:
   - [ ] Visualize relation between tables
   - [ ] Save table location in DB visualiser into configurations
** TODO [#3] DB Visualiser: Table adding form                        :@Julia:
** TODO [#2] Load fonts from jarman resourcesx                :@Julia:@Aleks:
   Inside resources/fonts is an drirectory with JetBrainsMono font.
   We need to use somehow this fonts.

   - [ ] - Create fontlist inside resources/fonts
   - [ ] - Select font
   - [ ] - Using selected font
   - [ ] - View with avaliable fonts    
** TODO [#2] DB Visualiser, finishing                 :@Julia:@Aleks:@Serhii:
   - [ ] React on profile from session user. @SerhiiRI 
   - [ ] Add button for ~delete table~ , ~create table~
   - [ ] Fix changes output , because now look bad
   - [ ] Change ~textfield~ on type depending component, mean for boolean ~chackbox~ componetnt , etc. 
   - [ ] If table contain id-field, make button with dialog box. @SerhiiRI generate list of table can be related to current editable table  
   - [ ] Make ~:component-type~, ~:field~ , ~:field-qualified~ not editable even by admin. 
   - [ ] Add buttons ~remove column~, ~add column~
** TODO [#2] Table Controller Forms                                  :@Aleks:
** TODO [#3] Config Generator Upgrade and Fix                        :@Aleks:
   - [ ] - block expand (there is to many parameters, we need to hide them as subconfig with title)
   - [ ] - message on save success
   - [ ] - message on save failed
   - [x] - fixed alert box permeation   
** TODO [#3] Base components and views                       :@Aleks:@Serhii:
   - [ ] Popup dialog with auto size
   - [ ] Popup box with auto size
   - [x] Select list with atom to state save
   - [x] Input text with atom to state save
   - [x] Input text-area with atom to state save
   - [x] Input password with atom to state save
   - [x] scrollbox - pre-configurated scrollable with speedup on mouse scroll and border nil
   - [x] Empty frame as base window for quick testing components
   - [x] Popup box allways on top with exit button
   - [x] Popup dialog with block background
** TODO [#3] Clobal event on key pressed                      :@Julia:@Aleks:
   - [x] Proxy for KeyEventDispacher for add global event on key pressed
   - [x] add and remove own KeyEventDispacher
   - [x] tutorial point
   - [ ] try add more KeyEventDispachers
   - [ ] lock repeating event on hold key
* Backend
** TODO [#1] themes plugin system                            :@Aleks:@Serhii:
   With relation to our conversation, @Morfeu5z please make namespace like jarman.gui.style,
   when you put simple variables . to customizing all styles per compoennt, after you done those taks,
   call me, for "talk" about idiomatic direction of naming for styles(i mean lexical abstracution you use
   to specifying variables style). As you remember i warn you not create variables like "button-one-border-bottom" etc.
     
   Try to minimize count of those varaibles(mean not more 50 etc. it's not about repeating colors, it's about abstraction division)
*** [ ] make this file, but not start integrate it to system, just create file. :@Aleks:    
*** [ ] try to prepare some graphical view for changing theme. Discribe one theme as ", " :@Aleks:    
*** [ ] create plugin declaration for themes.                       :@Serhii:
** TODO [#2] service_period.clj | sort contract list         :@Julia:@Serhii:
*** [ ] sorting contract by date
*** [ ] colorize contract by active-nonactive depend on current date
** TODO [#2] Permission systems                                      :@Aleks:

   #+begin_src clojure
     (session/test-persmission [:user :admin]) ;; => true
   #+end_src
   - [x] Render menu buttons by permission and hide empty expand
   - [x] Check permision for popup menu in DB Visualizer. Metadata and defview editor.
   - [ ] Create permission system 
   - [ ] Make hide some element when user not in component persmission list
   - [ ] add function to get permission from session, or function which TEST something in session, for example
** TODO [#2] Export doc as function                                  :@Aleks:
   - [x] - Popup window
   - [x] - Create function which invoke dialog box with export options
   - [ ] - Make spinner and notify if export is done
   - [ ] - Import custom defview
** TODO [#2] Add history of state                                   :@Serhii:
   - [ ] safe history
   - [ ] restore state
   - [ ] ~redo/undo~ only test
** TODO [#2] Scroll to selected in table                             :@Aleks:
   - [ ] - Scroll to selected in table
** TODO [#2] Mapping and demapping toolkit for confgen              :@Serhii:
** TODO [#3] encrypt business files                                 :@Serhii:
   - [ ] create crypo toolkit
   - [ ] create key-storage
** TODO [#3] make URL clojure loader                         :@Julia:@Serhii:
   - [ ] create crypo toolkit
   - [ ] create key-storage     
** TODO [#3] Forms as quick table layout for component               :@Aleks:
   - [ ] Create tutorial how to use forms component
   - [ ] Create own component where send as args vector with comonents in vector
     #+begin_example
     [ [(label)(label)] ;; row 1 
     [(label)(label)] ] ;; row 2
     #+end_example

** TODO [#3] Rewrite test for SSQL toolkit                   :@Julia:@Serhii:
   Current testable API too old. API standard was reimplemented.
   And strongly need to rewrite test cases for oll things query.
** TODO [#3] Versioning data structure                :@Julia:@Aleks:@Serhii:
** TODO [#3] sql_tools | debug                                      :@Serhii:
    - [ ] pretty printing for sql syntax
** TODO [#3] defvar managment                                :@Aleks:@Serhii:
   After app loading, we have some values in system variables, divided by group name,
   
   - [ ] Create GUI which allow controlling and changing variables inside gui. 
   - [ ] Make persistant function, which automatically wrote customized variable
     back to =.jarman=, (also mean parsing file) 
** TODO [#3] Ekka todo#1 chages                       :@Julia:@Aleks:@Serhii:
*** Підприємець
    -   ЄДРПОУ - 10 цифр довжина з переду нулями
    -   Форма власності - комбобокс
    -   Номер ПДВ
     
*** Point of sale
    -   Назва торгового обєкту
     
*** РРО
    -   повна назва
    -   Заводський номер замість серійний
    -   Десять цифр фіскальний номер
    -   Працює.непрацює якщо робить нарахування
    -   Версія -> Версія прошивки
    -   Ідентифікатор виробника -> Просто виробник назва
    -   Три поля модему замінити на тип зв'язку GPRS,Ethernet,Wireless.комбобокс. Якщо ГПРС то активний телефонний номер, якщо ні то дай компонент неактивним
    -   Телефонний номер не модема а РРО
    
*** Пломби
     -   Використана чи ні.
     
*** Ремонти
      -   остання датат контаркуту видалити
      -   Фіскальний номер
      -   Дата
      -   Причина розпломбування - комбо
      -   Технічна насправність  - список
      -   Характер насправності  - вибір
      -   Яка пломба ставиться   - додати
      -   Час(дата.година) розпломбування апарту
      
*** ДОговір сервісного обслуговування
       -   підприємець
       -   Сторона підписуванн
       -   Сторона замовник(директор)
       -   Список касових апаратів
       -   Тариф
       -   Реквізити
       -   Строк дії договору(дефолт на рік)
       -   Нарахунок по дням
       
*** Акт виконаних робіт
	-   створити

* Infrastructure
* Documentations
** TODO [#2] Create jarman Vocabluary                               :@Serhii:
** TODO [#3] create jarman manifest file              :@Julia:@Aleks:@Serhii:
   - Note taken on [2021-09-02 чт 19:01] 
     After making first release of Jarman and finishing plugin system write
     Manifest which must explain to us and others:
     
     - what idea of program evolution 
     - which things must be scalled, what must be classificated
        as Core and unchanged with no reason part of jarman
     - strategy and aims   

       
