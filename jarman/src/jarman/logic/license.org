* Debug Licenses

  #+name: debug-licenses
  #+startup: shrink
  | tenant | tenant-id | creation-date | expiration-date | limitation           |
  |--------+-----------+---------------+-----------------+----------------------|
  |        | <3>       | <l11>         | <l11>           | <l5>                 |
  | EKKA   | EKKA-1    | 10-01-2021    | 10-09-2021      | {:computer-count 10} |

  #+name: debug-licenses-raw
  #+header: :var elist=debug-licenses
  #+header: :results value silent
  #+begin_src emacs-lisp 
    (prin1-to-string elist)
  #+end_src

* What is jarman License

  Obtain selected in database license. License manually encrypted, and you need ~jarman.logic.session/decrypt-license~ function to decrypt it, and next you can managing it.

  #+name: out-selected-license
  #+header: :results output
  #+begin_src clojure
    (->> (load-license)
	 (decrypt-license)
	 (rename-keys)
	 (cl-format *out* "<license params>~%~{  ~{~A~^~20T~} ~%~}</license params>"))
  #+end_src
  #+RESULTS: out-selected-license
  : <license params>
  :   tenant            ekka 
  :   id tenant         ekka-1239fldfdsalfj 
  :   creation date     10-01-2021 
  :   expiration date   10-09-2021 
  :   limitation        {:computer-count 10} 
  : </license params>

    
  #+name: select-license
  #+header: :var id=0
  #+begin_src clojure :results output
    (create-license)
    <<out-selected-license>>
  #+end_src


  #+CALL: factorial(n=5) :exports results
