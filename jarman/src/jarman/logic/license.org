* Declared Licenses

  #+startup: shrink
  #+name: debug-licenses
  | tenant | tenant-id | creation-date | expiration-date | limitation           |
  |--------+-----------+---------------+-----------------+----------------------|
  |        | <3>       | <l11>         | <l11>           | <l5>                 |
  | EKKA   | EKKA-1    | 10-01-2021    | 10-09-2021      | {:computer-count 10} |
  | EKKA   | EKKA-2    | 10-01-2019    | 01-11-2022      | {:computer-count 3}  |
  | PASICH | PASICH-1  | 01-10-2021    | 01-06-2022      | {:computer-count 5}  |

  #+name: debug-licenses-raw
  #+begin_src emacs-lisp :var elist=debug-licenses :results value silent
    (prin1-to-string (cdr elist))
  #+end_src

* What is jarman License

  Obtain selected in database license. License manually encrypted, and you need ~jarman.logic.session/decrypt-license~ function to decrypt it, and next you can managing it.
  #+header: :ns jarman.logic.session
  #+header: :results output
  #+name: out-selected-license
  #+begin_src clojure
    (->> (load-license)
	 (decrypt-license)
	 (rename-keys)
	 (cl-format *out* "<license params>~%~{  ~{~A~^~20T~} ~%~}</license params>"))
  #+end_src
  #+RESULTS: out-selected-license
  : <license params>
  :   tenant            EKKA 
  :   id tenant         EKKA-2 
  :   creation date     10-01-2019 
  :   expiration date   1-11-2022 
  :   limitation        {:computer-count 3} 
  : </license params>

  Select license by the ~tenant-id~. 
  #+header: :ns jarman.logic.session
  #+header: :var tennat-id="EKKA-2"
  #+header: :var licenses-list=debug-licenses-raw
  #+header: :results output 
  #+name: choose-license
  #+begin_src clojure :noweb yes
    (def licenses-m
     (->> (read-string licenses-list)
	  (map license-to-map)
	  (group-by-tenant-id)))
    (create-license (get licenses-m tennat-id nil))
    <<out-selected-license>>
  #+end_src
  #+RESULTS: choose-license
  : <license params>
  :   tenant            EKKA 
  :   id tenant         EKKA-2 
  :   creation date     10-01-2019 
  :   expiration date   1-11-2022 
  :   limitation        {:computer-count 3} 
  : </license params>

  Quickly change license in one procedural call
  #+CALL: choose-license(tennat-id="EKKA-2")
