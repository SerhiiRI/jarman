;; -*- mode: Clojure;-*-
(require '[clojure.set :refer [rename-keys]])
(require '[jarman.managment.data-metadata-shorts :refer [table field table-link field-link field-composite prop]])
(require '[jarman.logic.connection :as connection])
(require '[jarman.logic.metadata])
(require '[jarman.logic.permissions])

(jarman.logic.permissions/permission-groups-add
 {:ekka-all               {:doc "Allow all elements in Ekka module"}
  :ekka-servicer          {:doc "Permission for servisant's only"}
  :ekka-payment-managment {:doc "Permission for all elements in Ekka module"}})

(def metadata-list
  [{:table_name "documents",
    :prop
    (prop
     :table (table :field :documents :representation "Documents")
     :columns
     [(field :field :table_name :component-type [:text])
      (field :field :name :component-type [:text])
      (field :field :document :component-type [:blob])
      (field :field :prop :component-type [:textarea])])}
   ;; ----------------------------------------------------
   {:table_name "profile",
    :prop
    (prop
     :table (table :field :profile :representation "Profile")
     :columns
     [(field :field :name :column-type [:varchar-20 :default :null] :component-type [:text])
      (field :field :configuration :column-type [:tinytext :nnull :default "'{}'"] :component-type [:textarea])])}
   ;; ----------------------------------------------------
   {:table_name "user",
    :prop
    (prop
     :table (table :field :user :representation "User"),
     :columns
     [(field :field :login :component-type [:text])
      (field :field :password :component-type [:text])
      (field :field :first_name :component-type [:text])
      (field :field :last_name :component-type [:text])
      (field :field :configuration :component-type [:prop])
      (field-link :field :id_profile :component-type [:link]
                  :foreign-keys [{:id_profile :profile} {:delete :cascade, :update :cascade}] :key-table :profile)])}
   ;; ----------------------------------------------------
   {:table_name "enterprise",
    :prop
    (prop
     :table (table :field :enterprise :representation "Enterprise"),
     :columns
     [(field :field :ssreou :representation "number of SSREOU" :component-type [:text])
      (field :field :name :component-type [:text])
      (field :field :ownership_form :component-type [:text])
      (field :field :vat_certificate :component-type [:textarea])
      (field :field :individual_tax_number :component-type [:text])
      (field :field :director :component-type [:text])
      (field :field :accountant :component-type [:text])
      (field :field :legal_address :component-type [:text])
      (field :field :physical_address :component-type [:text])
      (field :field :contacts_information :column-type [:mediumtext :default :null] :component-type [:textarea])])}
   ;; ----------------------------------------------------
   {:table_name "point_of_sale",
    :prop
    (prop
     :table (table :field :point_of_sale :representation "point_of_sale"),
     :columns
     [(field-link :field :id_enterprise :component-type [:link]
                  :foreign-keys [{:id_enterprise :enterprise} {:update :cascade}] :key-table :enterprise)
      (field :field :name :component-type [:text])
      (field :field :physical_address :component-type [:text])
      (field :field :telefons :component-type [:text])])}
   ;; ----------------------------------------------------
   {:table_name "cache_register",
    :prop
    (prop
     :table (table :field :cache_register :representation "cache_register"),
     :columns
     [(field-link :field :id_point_of_sale :component-type [:link]
                  :foreign-keys [{:id_point_of_sale :point_of_sale} {:delete :cascade, :update :cascade}] :key-table :point_of_sale)
      (field :field :name :component-type [:text])
      (field :field :serial_number :component-type [:text])
      (field :field :fiscal_number :component-type [:text])
      (field :field :manufacture_date :component-type [:date :datetime :text])
      (field :field :first_registration_date             :component-type [:date :datetime :text])
      (field :field :is_working :component-type [:boolean :number :text])
      (field :field :version :component-type [:text])
      (field :field :dev_id :component-type [:text])
      (field :field :producer :component-type [:text])
      (field :field :modem :component-type [:text])
      (field :field :modem_model :component-type [:text])
      (field :field :modem_serial_number :component-type [:text])
      (field :field :modem_phone_number :component-type [:text])])}
   ;; ----------------------------------------------------
   {:table_name "point_of_sale_group",
    :prop
    (prop
     :table (table :field "point_of_sale_group" :representation "point_of_sale_group"),
     :columns [(field :field :group_name :component-type [:text])
               (field :field :information :component-type [:textarea])])}
   ;; ----------------------------------------------------
   {:table_name "point_of_sale_group_links",
    :prop
    (prop
     :table (table-link :field :point_of_sale_group_links :representation "Point of sale gruop selection"),
     :columns [(field-link :field :id_point_of_sale_group
                           :component-type [:link]
                           :foreign-keys [{:id_point_of_sale_group :point_of_sale_group}
                                          {:delete :cascade, :update :cascade}]
                           :key-table :point_of_sale_group)
               (field-link :field :id_point_of_sale
                           :component-type [:link]
                           :foreign-keys [{:id_point_of_sale :point_of_sale}]
                           :key-table :point_of_sale)])}
   ;; ----------------------------------------------------
   {:table_name "seal",
    :prop
    (prop
     :table (table :field "seal" :representation "seal"),
     :columns
     [(field :field :seal_number :component-type [:text])
      (field :field :datetime_of_use :component-type [:datetime :date :text])
      (field :field :datetime_of_remove :component-type [:datetime :date :text])]
     :columns-composite
     [(field-composite :field :site :component-type [:comp-url] :constructor #'jarman.logic.metadata/map->Link
                       :columns [(field :field :site_name :constructor-var :text :component-type [:text])
                                 (field :field :site_url :constructor-var :link :component-type [:text])])
      (field-composite :field :loc_file :component-type [:comp-file] :constructor #'jarman.logic.metadata/map->File
                       :columns [(field :field :file_name :constructor-var :file-name :component-type [:text])
                                 (field :field :file :constructor-var :file  :component-type [:blob])])
      (field-composite :field :ftp_file :component-type [:comp-ftp] :constructor #'jarman.logic.metadata/map->FtpFile
                       :columns [(field :field :ftp_file_name :constructor-var :file-name :component-type [:text])
                                 (field :field :ftp_file_path :constructor-var :file-path :component-type [:text])])])}
   ;; ----------------------------------------------------
   {:table_name "repair_reasons",
    :prop
    (prop :table (table :field "repair_reasons" :representation "repair_reasons"),
          :columns [(field :field :description :component-type [:text])])}
   ;; ----------------------------------------------------
   {:table_name "repair_technical_issue",
    :prop
    (prop :table (table :field "repair_technical_issue" :representation "repair_technical_issue"),
          :columns [(field :field :description :component-type [:text])])}
   ;; ----------------------------------------------------
   {:table_name "repair_nature_of_problem",
    :prop
    (prop :table (table :field "repair_nature_of_problem" :representation "repair_nature_of_problem"),
          :columns [(field :field :description :component-type [:text])])}
   ;; ----------------------------------------------------
   {:table_name "repair_contract",
    :prop
    (prop
     :table (table :field "repair_contract" :representation "repair_contract"),
     :columns
     [(field-link :field :id_cache_register :component-type [:link]
                  :foreign-keys [{:id_cache_register :cache_register} {:delete :cascade, :update :cascade}] :key-table :cache_register)
      (field-link :field :id_old_seal :component-type [:link]
                  :foreign-keys [{:id_old_seal :seal} {:delete :null, :update :null}] :key-table :seal)
      (field-link :field :id_new_seal :component-type [:link]
                  :foreign-keys [{:id_new_seal :seal} {:delete :null, :update :null}] :key-table :seal)
      (field-link :field :id_repair_reasons :component-type [:link]
                  :foreign-keys [{:id_repair_reasons :repair_reasons} {:delete :null, :update :null}] :key-table :repair_reasons)
      (field-link :field :id_repair_technical_issue :component-type [:link]
                  :foreign-keys [{:id_repair_technical_issue :repair_technical_issue} {:delete :null, :update :null}] :key-table :repair_technical_issue)
      (field-link :field :id_repair_nature_of_problem :component-type [:link]
                  :foreign-keys [{:id_repair_nature_of_problem :repair_nature_of_problem} {:delete :null, :update :null}] :key-table :repair_nature_of_problem)
      (field :field :repair_date :component-type [:date :datetime :text])
      (field :field :cache_register_register_date :component-type [:date :datetime :text])])}
   ;; ----------------------------------------------------
   {:table_name "service_contract",
    :prop
    (prop
     :table (table :field "service_contract" :representation "Service contracts"),
     :columns [(field-link :field :id_enterprise :component-type [:link]
                           :key-table :enterprise
                           :foreign-keys [{:id_enterprise :enterprise}
                                          {:delete :cascade, :update :cascade}])
               (field :field :contract_start_term :component-type [:date])
               (field :field :contract_end_term :component-type [:date])])}
   ;; ----------------------------------------------------
   {:table_name "service_contract_month",
    :prop
    (prop
     :table (table :field "service_contract_month" :representation "Service Contract Month"),
     :columns [(field :field :service_month_start :component-type [:date])
               (field :field :service_month_end :component-type [:date])
               (field :field :money_per_month :component-type [:float :text])
               (field :field :was_payed :component-type [:boolean])
               (field-link :field :id_service_contract :component-type [:link]
                           :key-table :service_contract
                           :foreign-keys [{:id_service_contract :service_contract}
                                          {:delete :cascade, :update :cascade}])])}])

(def view-list
  (quote
   ((defview
      permission
      (table
       :id :permission
       :name "permission"
       :plug-place [:#tables-view-plugin]
       :tables [:permission]
       :view-columns [:permission.permission_name :permission.configuration]
       :model-insert [:permission.permission_name :permission.configuration]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :actions []
       :buttons []
       :query
       {:table_name :permission,
        :column
        [:#as_is
         :permission.id
         :permission.permission_name
         :permission.configuration]})
      (dialog-table
       :id :permission-table
       :name "permission dialog"
       :tables [:permission]
       :view-columns [:permission.permission_name :permission.configuration]
       :query
       {:table_name :permission,
        :column
        [:#as_is
         :permission.id
         :permission.permission_name
         :permission.configuration]}))

    (defview
      user
      (table
       :id :user
       :name "user"
       :plug-place [:#tables-view-plugin]
       :tables [:user :permission]
       :view-columns [:user.login
                      :user.password
                      :user.first_name
                      :user.last_name
                      :user.configuration
                      :permission.permission_name]
       :model-insert [:user.login
                      :user.password
                      :user.first_name
                      :user.last_name
                      :user.id_permission
                      :user.configuration]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission [:user :developer]
       :dialog
       {:user.id_permission [:permission :dialog-table :permission-table]}
       :actions []
       :buttons []
       :query
       {:table_name :user,
        :inner-join [:user->permission],
        :column
        [:#as_is
         :user.id
         :user.login
         :user.password
         :user.first_name
         :user.last_name
         :user.configuration
         :user.id_permission
         :permission.id
         :permission.permission_name
         :permission.configuration]}))

    (defview
      cache_register
      (table
       :id :cache_register
       :name "cache_register"
       :plug-place [:#tables-view-plugin]
       :tables [:cache_register :point_of_sale :enterprise]
       :view-columns [:cache_register.id_point_of_sale
                      :cache_register.name
                      :cache_register.serial_number
                      :cache_register.fiscal_number
                      :cache_register.manufacture_date
                      :cache_register.first_registration_date
                      :cache_register.is_working
                      :cache_register.version
                      :cache_register.dev_id
                      :cache_register.producer
                      :cache_register.modem
                      :cache_register.modem_model
                      :cache_register.modem_serial_number
                      :cache_register.modem_phone_number]
       :model-insert [:cache_register.id_point_of_sale
                      :cache_register.name
                      :cache_register.serial_number
                      :cache_register.fiscal_number
                      :cache_register.manufacture_date
                      :cache_register.first_registration_date
                      :cache_register.is_working
                      :cache_register.version
                      :cache_register.dev_id
                      :cache_register.producer
                      :cache_register.modem
                      :cache_register.modem_model
                      :cache_register.modem_serial_number
                      :cache_register.modem_phone_number]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {:cache_register.id_point_of_sale
        [:point_of_sale :dialog-table :point_of_sale-table]}
       :actions []
       :buttons []
       :query
       {:table_name :cache_register,
        :inner-join
        [:cache_register->point_of_sale :point_of_sale->enterprise],
        :column
        [:#as_is
         :cache_register.id
         :cache_register.id_point_of_sale
         :cache_register.name
         :cache_register.serial_number
         :cache_register.fiscal_number
         :cache_register.manufacture_date
         :cache_register.first_registration_date
         :cache_register.is_working
         :cache_register.version
         :cache_register.dev_id
         :cache_register.producer
         :cache_register.modem
         :cache_register.modem_model
         :cache_register.modem_serial_number
         :cache_register.modem_phone_number
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})
      (dialog-table
       :id :cache_register-table
       :name "cache_register dialog"
       :permission [:admin :user :developer]
       :tables [:cache_register :point_of_sale :enterprise]
       :view-columns [:cache_register.id_point_of_sale
                      :cache_register.name
                      :cache_register.serial_number
                      :cache_register.fiscal_number
                      :cache_register.manufacture_date
                      :cache_register.first_registration_date
                      :cache_register.is_working
                      :cache_register.version
                      :cache_register.dev_id
                      :cache_register.producer
                      :cache_register.modem
                      :cache_register.modem_model
                      :cache_register.modem_serial_number
                      :cache_register.modem_phone_number]
       :query
       {:table_name :cache_register,
        :inner-join
        [:cache_register->point_of_sale :point_of_sale->enterprise],
        :column
        [:#as_is
         :cache_register.id
         :cache_register.id_point_of_sale
         :cache_register.name
         :cache_register.serial_number
         :cache_register.fiscal_number
         :cache_register.manufacture_date
         :cache_register.first_registration_date
         :cache_register.is_working
         :cache_register.version
         :cache_register.dev_id
         :cache_register.producer
         :cache_register.modem
         :cache_register.modem_model
         :cache_register.modem_serial_number
         :cache_register.modem_phone_number
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]}))

    (defview
      documents
      (table
       :id :documents
       :name "documents"
       :plug-place [:#tables-view-plugin]
       :tables [:documents]
       :view-columns [:documents.table_name
                      :documents.name
                      :documents.document
                      :documents.prop]
       :model-insert [:documents.table_name
                      :documents.name
                      :documents.document
                      :documents.prop]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :actions []
       :buttons []
       :query
       {:table_name :documents,
        :column
        [:#as_is
         :documents.id
         :documents.table_name
         :documents.name
         :documents.document
         :documents.prop]}))

    (defview
      enterprise
      (table
       :id :enterprise
       :name "enterprise"
       :plug-place [:#tables-view-plugin]
       :tables [:enterprise]
       :view-columns [:enterprise.ssreou
                      :enterprise.name
                      :enterprise.ownership_form
                      :enterprise.vat_certificate
                      :enterprise.individual_tax_number
                      :enterprise.director
                      :enterprise.accountant
                      :enterprise.legal_address
                      :enterprise.physical_address
                      :enterprise.contacts_information]
       :model-insert [:enterprise.ssreou
                      :enterprise.name
                      :enterprise.ownership_form
                      :enterprise.vat_certificate
                      :enterprise.individual_tax_number
                      :enterprise.director
                      :enterprise.accountant
                      :enterprise.legal_address
                      :enterprise.physical_address
                      :enterprise.contacts_information]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :actions []
       :buttons []
       :query
       {:table_name :enterprise,
        :column
        [:#as_is
         :enterprise.id
         :enterprise.ssreou
         :enterprise.name
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})
      (dialog-table
       :id :enterprise-table
       :name "enterprise dialog"
       :tables [:enterprise]
       :view-columns [:enterprise.ssreou
                      :enterprise.name
                      :enterprise.ownership_form
                      :enterprise.vat_certificate
                      :enterprise.individual_tax_number
                      :enterprise.director
                      :enterprise.accountant
                      :enterprise.legal_address
                      :enterprise.physical_address
                      :enterprise.contacts_information]
       :query
       {:table_name :enterprise,
        :column
        [:#as_is
         :enterprise.id
         :enterprise.ssreou
         :enterprise.name
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]}))

    (defview
      point_of_sale
      (table
       :id :point_of_sale
       :name "point_of_sale"
       :plug-place [:#tables-view-plugin]
       :tables [:point_of_sale :enterprise]
       :view-columns [:point_of_sale.id_enterprise
                      :point_of_sale.name
                      :point_of_sale.physical_address
                      :point_of_sale.telefons]
       :model-insert [:point_of_sale.id_enterprise
                      :point_of_sale.name
                      :point_of_sale.physical_address
                      :point_of_sale.telefons]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {:point_of_sale.id_enterprise
        [:enterprise :dialog-table :enterprise-table]}
       :actions []
       :buttons []
       :query
       {:table_name :point_of_sale,
        :inner-join [:point_of_sale->enterprise],
        :column
        [:#as_is
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})
      (dialog-table
       :id :point_of_sale-table
       :name "point_of_sale dialog"
       :permission [:admin :user :developer]
       :tables [:point_of_sale :enterprise]
       :view-columns [:point_of_sale.id_enterprise
                      :point_of_sale.name
                      :point_of_sale.physical_address
                      :point_of_sale.telefons]
       :query
       {:table_name :point_of_sale,
        :inner-join [:point_of_sale->enterprise],
        :column
        [:#as_is
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]}))

    (defview
      point_of_sale_group
      (table
       :id :point_of_sale_group
       :name "point_of_sale_group"
       :plug-place [:#tables-view-plugin]
       :tables [:point_of_sale_group]
       :view-columns [:point_of_sale_group.group_name :point_of_sale_group.information]
       :model-insert [:point_of_sale_group.group_name :point_of_sale_group.information]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :actions []
       :buttons []
       :query
       {:table_name :point_of_sale_group,
        :column
        [:#as_is
         :point_of_sale_group.id
         :point_of_sale_group.group_name
         :point_of_sale_group.information]})
      (dialog-table
       :id :point_of_sale_group-table
       :name "point_of_sale_group dialog"
       :permission :ekka-all
       :tables [:point_of_sale_group]
       :view-columns [:point_of_sale_group.group_name :point_of_sale_group.information]
       :query
       {:table_name :point_of_sale_group,
        :column
        [:#as_is
         :point_of_sale_group.id
         :point_of_sale_group.group_name
         :point_of_sale_group.information]}))

    (defview
      point_of_sale_group_links
      (table
       :id :point_of_sale_group_links
       :name "point_of_sale_group_links"
       :plug-place [:#tables-view-plugin]
       :tables [:point_of_sale_group_links
                :point_of_sale_group
                :point_of_sale
                :enterprise]
       :view-columns [:point_of_sale_group_links.id_point_of_sale_group
                      :point_of_sale_group_links.id_point_of_sale]
       :model-insert [:point_of_sale_group_links.id_point_of_sale_group
                      :point_of_sale_group_links.id_point_of_sale]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {:point_of_sale_group_links.id_point_of_sale_group
        [:point_of_sale_group :dialog-table :point_of_sale_group-table],
        :point_of_sale_group_links.id_point_of_sale
        [:point_of_sale :dialog-table :point_of_sale-table]}
       :actions []
       :buttons []
       :query
       {:table_name :point_of_sale_group_links,
        :inner-join
        [:point_of_sale_group_links->point_of_sale_group
         :point_of_sale_group_links->point_of_sale
         :point_of_sale->enterprise],
        :column
        [:#as_is
         :point_of_sale_group_links.id
         :point_of_sale_group_links.id_point_of_sale_group
         :point_of_sale_group_links.id_point_of_sale
         :point_of_sale_group.id
         :point_of_sale_group.group_name
         :point_of_sale_group.information
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})
      (dialog-table
       :id :point_of_sale_group_links-table
       :name "point_of_sale_group_links dialog"
       :permission :ekka-all
       :tables [:point_of_sale_group_links
                :point_of_sale_group
                :point_of_sale
                :enterprise]
       :view-columns [:point_of_sale_group_links.id_point_of_sale_group
                      :point_of_sale_group_links.id_point_of_sale]
       :query
       {:table_name :point_of_sale_group_links,
        :inner-join
        [:point_of_sale_group_links->point_of_sale_group
         :point_of_sale_group_links->point_of_sale
         :point_of_sale->enterprise],
        :column
        [:#as_is
         :point_of_sale_group_links.id
         :point_of_sale_group_links.id_point_of_sale_group
         :point_of_sale_group_links.id_point_of_sale
         :point_of_sale_group.id
         :point_of_sale_group.group_name
         :point_of_sale_group.information
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]}))

    (defview
      repair_contract
      (table
       :id :repair_contract
       :name "repair_contract"
       :plug-place [:#tables-view-plugin]
       :tables [:repair_contract
                :cache_register
                :point_of_sale
                :enterprise
                :old_seal
                :new_seal
                :repair_reasons
                :repair_technical_issue
                :repair_nature_of_problem]
       :view-columns [:repair_contract.id_cache_register
                      :repair_contract.id_old_seal
                      :repair_contract.id_new_seal
                      :repair_contract.id_repair_reasons
                      :repair_contract.id_repair_technical_issue
                      :repair_contract.id_repair_nature_of_problem
                      :repair_contract.repair_date
                      :repair_contract.cache_register_register_date]
       :model-insert [:repair_contract.id_cache_register
                      :repair_contract.id_old_seal
                      :repair_contract.id_new_seal
                      :repair_contract.id_repair_reasons
                      :repair_contract.id_repair_technical_issue
                      :repair_contract.id_repair_nature_of_problem
                      :repair_contract.repair_date
                      :repair_contract.cache_register_register_date]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {:repair_contract.id_cache_register
        [:cache_register :dialog-table :cache_register-table],
        :repair_contract.id_old_seal [:seal :dialog-table :seal-table],
        :repair_contract.id_new_seal [:seal :dialog-table :seal-table],
        :repair_contract.id_repair_reasons
        [:repair_reasons :dialog-bigstring :repair_reasons-bigstring],
        :repair_contract.id_repair_technical_issue
        [:repair_technical_issue
         :dialog-bigstring
         :repair_technical_issue-bigstring],
        :repair_contract.id_repair_nature_of_problem
        [:repair_nature_of_problem
         :dialog-bigstring
         :repair_nature_of_problem-bigstring]}
       :actions []
       :buttons []
       :query
       {:table_name :repair_contract,
        :left-join
        [:repair_contract->cache_register
         :cache_register->point_of_sale
         :point_of_sale->enterprise
         :repair_contract.id_old_seal->seal*old_seal.id
         :repair_contract.id_new_seal->seal*new_seal.id
         :repair_contract->repair_reasons
         :repair_contract->repair_technical_issue
         :repair_contract->repair_nature_of_problem],
        :column
        [:#as_is
         :repair_contract.id
         :repair_contract.id_cache_register
         :repair_contract.id_old_seal
         :repair_contract.id_new_seal
         :repair_contract.id_repair_reasons
         :repair_contract.id_repair_technical_issue
         :repair_contract.id_repair_nature_of_problem
         :repair_contract.repair_date
         :repair_contract.cache_register_register_date
         :cache_register.id
         :cache_register.id_point_of_sale
         :cache_register.name
         :cache_register.serial_number
         :cache_register.fiscal_number
         :cache_register.manufacture_date
         :cache_register.first_registration_date
         :cache_register.is_working
         :cache_register.version
         :cache_register.dev_id
         :cache_register.producer
         :cache_register.modem
         :cache_register.modem_model
         :cache_register.modem_serial_number
         :cache_register.modem_phone_number
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information
         :old_seal.id
         :old_seal.seal_number
         :old_seal.datetime_of_use
         :old_seal.datetime_of_remove
         :new_seal.id
         :new_seal.seal_number
         :new_seal.datetime_of_use
         :new_seal.datetime_of_remove
         :repair_reasons.id
         :repair_reasons.description
         :repair_technical_issue.id
         :repair_technical_issue.description
         :repair_nature_of_problem.id
         :repair_nature_of_problem.description]})
      (dialog-table
       :id :repair_contract-table
       :name "repair_contract dialog"
       :tables [:repair_contract
                :cache_register
                :point_of_sale
                :enterprise
                :old_seal
                :new_seal
                :repair_reasons
                :repair_technical_issue
                :repair_nature_of_problem]
       :view-columns [:repair_contract.id_cache_register
                      :repair_contract.id_old_seal
                      :repair_contract.id_new_seal
                      :repair_contract.id_repair_reasons
                      :repair_contract.id_repair_technical_issue
                      :repair_contract.id_repair_nature_of_problem
                      :repair_contract.repair_date
                      :repair_contract.cache_register_register_date]
       :query
       {:table_name :repair_contract,
        :left-join
        [:repair_contract->cache_register
         :cache_register->point_of_sale
         :point_of_sale->enterprise
         :repair_contract.id_old_seal->seal.id
         :repair_contract.id_new_seal->seal.id
         :repair_contract->repair_reasons
         :repair_contract->repair_technical_issue
         :repair_contract->repair_nature_of_problem],
        :column
        [:#as_is
         :repair_contract.id
         :repair_contract.id_cache_register
         :repair_contract.id_old_seal
         :repair_contract.id_new_seal
         :repair_contract.id_repair_reasons
         :repair_contract.id_repair_technical_issue
         :repair_contract.id_repair_nature_of_problem
         :repair_contract.repair_date
         :repair_contract.cache_register_register_date
         :cache_register.id
         :cache_register.id_point_of_sale
         :cache_register.name
         :cache_register.serial_number
         :cache_register.fiscal_number
         :cache_register.manufacture_date
         :cache_register.first_registration_date
         :cache_register.is_working
         :cache_register.version
         :cache_register.dev_id
         :cache_register.producer
         :cache_register.modem
         :cache_register.modem_model
         :cache_register.modem_serial_number
         :cache_register.modem_phone_number
         :point_of_sale.id
         :point_of_sale.id_enterprise
         :point_of_sale.name
         :point_of_sale.physical_address
         :point_of_sale.telefons
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information
         :old_seal.id
         :old_seal.seal_number
         :old_seal.datetime_of_use
         :old_seal.datetime_of_remove
         :new_seal.id
         :new_seal.seal_number
         :new_seal.datetime_of_use
         :new_seal.datetime_of_remove
         :repair_reasons.id
         :repair_reasons.description
         :repair_technical_issue.id
         :repair_technical_issue.description
         :repair_nature_of_problem.id
         :repair_nature_of_problem.description]}))

    (defview
      repair_nature_of_problem
      (table
       :id :repair_nature_of_problem
       :name "repair_nature_of_problem"
       :plug-place [:#tables-view-plugin]
       :tables [:repair_nature_of_problem]
       :view-columns [:repair_nature_of_problem.description]
       :model-insert [:repair_nature_of_problem.description]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :actions []
       :buttons []
       :query
       {:table_name :repair_nature_of_problem,
        :column
        [:#as_is
         :repair_nature_of_problem.id
         :repair_nature_of_problem.description]})
      (dialog-bigstring
       :id :repair_nature_of_problem-bigstring
       :name "repair_nature_of_problem dialog"
       :permission :ekka-all
       :item-columns
       :repair_nature_of_problem.description
       :query
       {:table_name :repair_nature_of_problem,
        :column
        [:#as_is
         :repair_nature_of_problem.id
         :repair_nature_of_problem.description]}))

    (defview
      repair_reasons
      (table
       :id :repair_reasons
       :name "repair_reasons"
       :plug-place [:#tables-view-plugin]
       :tables [:repair_reasons]
       :view-columns [:repair_reasons.description]
       :model-insert [:repair_reasons.description]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {}
       :actions []
       :buttons []
       :query
       {:table_name :repair_reasons,
        :column [:#as_is :repair_reasons.id :repair_reasons.description]})
      (dialog-bigstring
       :id :repair_reasons-bigstring
       :name "repair_reasons dialog"
       :permission [:admin :user :developer]
       :item-columns
       :repair_reasons.description
       :query
       {:table_name :repair_reasons,
        :column [:#as_is :repair_reasons.id :repair_reasons.description]}))

    (defview
      repair_technical_issue
      (table
       :id :repair_technical_issue
       :name "repair_technical_issue"
       :plug-place [:#tables-view-plugin]
       :tables [:repair_technical_issue]
       :view-columns [:repair_technical_issue.description]
       :model-insert [:repair_technical_issue.description]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :actions []
       :buttons []
       :query
       {:table_name :repair_technical_issue,
        :column
        [:#as_is
         :repair_technical_issue.id
         :repair_technical_issue.description]})
      (dialog-bigstring
       :id :repair_technical_issue-bigstring
       :name "repair_technical_issue dialog"
       :permission [:admin :user :developer]
       :item-columns
       :repair_technical_issue.description
       :query
       {:table_name :repair_technical_issue,
        :column
        [:#as_is
         :repair_technical_issue.id
         :repair_technical_issue.description]}))

    (defview
      seal
      (table
       :id :seal
       :name "seal"
       :plug-place [:#tables-view-plugin]
       :tables [:seal]
       :view-columns [:seal.seal_number :seal.datetime_of_use :seal.datetime_of_remove]
       :model-insert [:seal.seal_number
                      :seal.datetime_of_use
                      :seal.datetime_of_remove
                      :seal.site
                      :seal.loc_file
                      :seal.ftp_file]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {}
       :actions []
       :buttons []
       :query
       {:table_name :seal,
        :column
        [:#as_is
         :seal.id
         :seal.seal_number
         :seal.datetime_of_use
         :seal.datetime_of_remove
         :seal.site_name
         :seal.site_url
         :seal.file_name
         :seal.file
         :seal.ftp_file_name
         :seal.ftp_file_path]})
      (dialog-table
       :id :seal-table
       :name "seal dialog"
       :permission :ekka-all
       :tables [:seal]
       :view-columns [:seal.seal_number :seal.datetime_of_use :seal.datetime_of_remove]
       :query
       {:table_name :seal,
        :column
        [:#as_is
         :seal.id
         :seal.seal_number
         :seal.datetime_of_use
         :seal.datetime_of_remove
         :seal.site_name
         :seal.site_url
         :seal.file_name
         :seal.file
         :seal.ftp_file_name
         :seal.ftp_file_path]}))

    (defview
      service_contract
      (service-period
       :id :service_contract
       :permission :ekka-all
       :name "service_contract"
       :plug-place [:#tables-view-plugin])
      (table
       :id :service_contract
       :name "service_contract"
       :plug-place [:#tables-view-plugin]
       :tables [:service_contract :enterprise]
       :view-columns [:service_contract.id_enterprise
                      :service_contract.contract_start_term
                      :service_contract.contract_end_term]
       :model-insert [:service_contract.id_enterprise
                      :service_contract.contract_start_term
                      :service_contract.contract_end_term]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {:service_contract.id_enterprise
        [:enterprise :dialog-table :enterprise-table]}
       :actions []
       :buttons []
       :query
       {:table_name :service_contract,
        :inner-join [:service_contract->enterprise],
        :column
        [:#as_is
         :service_contract.id
         :service_contract.id_enterprise
         :service_contract.contract_start_term
         :service_contract.contract_end_term
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})
      (dialog-table
       :id :service_contract-table
       :name "service_contract dialog"
       :tables [:service_contract :enterprise]
       :view-columns [:service_contract.id_enterprise
                      :service_contract.contract_start_term
                      :service_contract.contract_end_term]
       :query
       {:table_name :service_contract,
        :inner-join [:service_contract->enterprise],
        :column
        [:#as_is
         :service_contract.id
         :service_contract.id_enterprise
         :service_contract.contract_start_term
         :service_contract.contract_end_term
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]}))

    (defview
      service_contract_month
      (table
       :id :service_contract_month
       :name "service_contract_month"
       :plug-place [:#tables-view-plugin]
       :tables [:service_contract_month :service_contract :enterprise]
       :view-columns [:service_contract_month.id_service_contract
                      :service_contract_month.service_month_start
                      :service_contract_month.service_month_end
                      :service_contract_month.money_per_month
                      :service_contract_month.was_payed]
       :model-insert [:service_contract_month.id_service_contract
                      :service_contract_month.service_month_start
                      :service_contract_month.service_month_end
                      :service_contract_month.money_per_month
                      :service_contract_month.was_payed]
       :active-buttons [:insert :update :delete :clear :changes]
       :permission :ekka-all
       :dialog
       {:service_contract_month.id_service_contract
        [:service_contract :dialog-table :service_contract-table]}
       :actions []
       :buttons []
       :query
       {:table_name :service_contract_month,
        :inner-join
        [:service_contract_month->service_contract
         :service_contract->enterprise],
        :column
        [:#as_is
         :service_contract_month.id
         :service_contract_month.id_service_contract
         :service_contract_month.service_month_start
         :service_contract_month.service_month_end
         :service_contract_month.money_per_month
         :service_contract_month.was_payed
         :service_contract.id
         :service_contract.id_enterprise
         :service_contract.contract_start_term
         :service_contract.contract_end_term
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})
      (dialog-table
       :id :service_contract_month-table
       :name "service_contract_month dialog"
       :permission [:admin :user :developer]
       :tables [:service_contract_month :service_contract :enterprise]
       :view-columns [:service_contract_month.id_service_contract
                      :service_contract_month.service_month_start
                      :service_contract_month.service_month_end
                      :service_contract_month.money_per_month
                      :service_contract_month.was_payed]
       :query
       {:table_name :service_contract_month,
        :inner-join
        [:service_contract_month->service_contract
         :service_contract->enterprise],
        :column
        [:#as_is
         :service_contract_month.id
         :service_contract_month.id_service_contract
         :service_contract_month.service_month_start
         :service_contract_month.service_month_end
         :service_contract_month.money_per_month
         :service_contract_month.was_payed
         :service_contract.id
         :service_contract.id_enterprise
         :service_contract.contract_start_term
         :service_contract.contract_end_term
         :service_contract.money_per_month
         :enterprise.id
         :enterprise.ssreou
         :enterprise.ownership_form
         :enterprise.vat_certificate
         :enterprise.individual_tax_number
         :enterprise.director
         :enterprise.accountant
         :enterprise.legal_address
         :enterprise.physical_address
         :enterprise.contacts_information]})))))


;;;;;;;;;;;;;;
;;; Events ;;;
;;;;;;;;;;;;;;

(require 'jarman.managment.data-managment)
(require 'jarman.logic.view-manager)
;;; You not need to implement all, 
;;; only those you need for managment

(defn on-install []
  (println "Installing jarman schemas, it gonna take some time...")
  (println "cleaning all tables.")
  (jarman.managment.data-managment/database-delete-scheme metadata-list)
  (println "creating system tables.")
  (jarman.managment.data-managment/database-verify-system-tables)
  (println "creating business tables.")
  (jarman.managment.data-managment/database-create-scheme metadata-list)
  (println "persisting metadata.")
  (jarman.managment.data-managment/metadata-persist-into-database metadata-list)
  (println "done."))

(defn on-delete []
  (println "Deleting all jarman system/business shemas.")
  (jarman.managment.data-managment/database-delete-scheme metadata-list)
  (println "done."))

(defn on-backup []
  (println "`on-backup` not yet impelemented"))

(defn on-app-start []
  (println "Starting verifing system tables.")
  (jarman.managment.data-managment/database-verify-system-tables)
  (println "done."))

(defn on-meta-persist []
  (println "Persisting metadata to database.")
  (jarman.managment.data-managment/metadata-persist-into-database metadata-list)
  (println "done."))

(defn on-meta-clean []
  (println "Cleaning metadata from database.")
  (jarman.managment.data-managment/database-clear-metadata)
  (println "done."))

(defn on-meta-refresh []
  (println "Refreshing metadata structure in databse")
  (on-meta-persist)
  (on-meta-clean)
  (println "done."))

(defn on-view-persist []
  (println "Persisting views to database.")
  (jarman.managment.data-managment/views-persist-into-database view-list)
  (println "done."))

(defn on-view-clean []
  (println "Cleaning views from database.")
  (jarman.logic.view-manager/view-clean)
  (println "done."))

(defn on-view-refresh []
  (println "Refreshing views in databse")
  (on-view-persist)
  (on-view-clean)
  (println "done."))

(defn on-meta-persist []
  (println "Persisting views to database.")
  (jarman.managment.data-managment/metadata-persist-into-database metadata-list)
  (println "done."))

(defn on-meta-clean []
  (println "Cleaning views from database.")
  (jarman.managment.data-managment/database-clear-metadata)
  (println "done."))

(defn on-meta-refresh []
  (println "Refreshing views in databse")
  (on-meta-persist)
  (on-meta-clean)
  (println "done."))

(defn on-app-close []
  (println "`on-app-close` not yet impelemented"))

(defn on-crash []
  (println "`on-crash` not yet impelemented"))

(defn on-log []
  (println "`on-log` not yet impelemented"))

(defn on-clear []
  (println "`on-clear` not yet impelemented"))

(defn on-info []
  (println "\nDatabase:")
  (jarman.managment.data-managment/database-info)
  (println "\n.jarman.data Metadata:")
  (jarman.managment.data-managment/metadata-info metadata-list)
  (println "\nDatabase Metadata:")
  (jarman.managment.data-managment/metadata-info (jarman.logic.metadata/getset))
  (println "\n.jarman.data Views")
  (jarman.managment.data-managment/view-info view-list)
  (println "\n.Database Views")
  (jarman.managment.data-managment/view-info (jarman.logic.view-manager/loader-from-db)))

(comment
  (on-install)
  (on-delete)
  (on-backup)
  (on-app-start)
  (on-app-close)
  (on-crash)
  (on-log)
  (on-clear)
  (on-info)
  ;; ----
  (on-meta-refresh)
  (on-meta-persist)
  (on-meta-clean)
  (on-view-refresh)
  (on-view-persist)
  (on-view-clean))

(comment
  (jarman.managment.data-managment/view-info view-list)
  (jarman.managment.data-managment/view-info (jarman.logic.view-manager/loader-from-db))
  (jarman.managment.data-managment/views-persist-into-database view-list)
  (jarman.managment.data-managment/database-info)
  (jarman.managment.data-managment/metadata-info metadata-list)
  (jarman.managment.data-managment/database-recreate-metadata-to-db)
  (jarman.managment.data-managment/database-recreate-metadata-to-file "some.edn")
  (jarman.managment.data-managment/metadata-persist-into-database metadata-list)
  (jarman.managment.data-managment/metadata-get-tables metadata-list)
  (jarman.managment.data-managment/database-verify-system-tables)
  (jarman.managment.data-managment/database-clear-metadata)
  (jarman.managment.data-managment/database-delete-business-scheme metadata-list)
  (jarman.managment.data-managment/database-delete-scheme metadata-list)
  (jarman.managment.data-managment/database-create-scheme metadata-list))

